{"name":"Openssl","tagline":"Mirror of git://git.openssl.org/openssl.git","body":"\r\n OpenSSL 1.1.0-dev\r\n\r\n Copyright (c) 1998-2011 The OpenSSL Project\r\n Copyright (c) 1995-1998 Eric A. Young, Tim J. Hudson\r\n All rights reserved.\r\n\r\n DESCRIPTION\r\n -----------\r\n\r\n The OpenSSL Project is a collaborative effort to develop a robust,\r\n commercial-grade, fully featured, and Open Source toolkit implementing the\r\n Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1)\r\n protocols as well as a full-strength general purpose cryptography library.\r\n The project is managed by a worldwide community of volunteers that use the\r\n Internet to communicate, plan, and develop the OpenSSL toolkit and its\r\n related documentation.\r\n\r\n OpenSSL is based on the excellent SSLeay library developed from Eric A. Young\r\n and Tim J. Hudson.  The OpenSSL toolkit is licensed under a dual-license (the\r\n OpenSSL license plus the SSLeay license) situation, which basically means\r\n that you are free to get and use it for commercial and non-commercial\r\n purposes as long as you fulfill the conditions of both licenses.\r\n\r\n OVERVIEW\r\n --------\r\n\r\n The OpenSSL toolkit includes:\r\n\r\n libssl.a:\r\n     Implementation of SSLv2, SSLv3, TLSv1 and the required code to support\r\n     both SSLv2, SSLv3 and TLSv1 in the one server and client.\r\n\r\n libcrypto.a:\r\n     General encryption and X.509 v1/v3 stuff needed by SSL/TLS but not\r\n     actually logically part of it. It includes routines for the following:\r\n\r\n     Ciphers\r\n        libdes - EAY's libdes DES encryption package which was floating\r\n                 around the net for a few years, and was then relicensed by\r\n                 him as part of SSLeay.  It includes 15 'modes/variations'\r\n                 of DES (1, 2 and 3 key versions of ecb, cbc, cfb and ofb;\r\n                 pcbc and a more general form of cfb and ofb) including desx\r\n                 in cbc mode, a fast crypt(3), and routines to read\r\n                 passwords from the keyboard.\r\n        RC4 encryption,\r\n        RC2 encryption      - 4 different modes, ecb, cbc, cfb and ofb.\r\n        Blowfish encryption - 4 different modes, ecb, cbc, cfb and ofb.\r\n        IDEA encryption     - 4 different modes, ecb, cbc, cfb and ofb.\r\n\r\n     Digests\r\n        MD5 and MD2 message digest algorithms, fast implementations,\r\n        SHA (SHA-0) and SHA-1 message digest algorithms,\r\n        MDC2 message digest. A DES based hash that is popular on smart cards.\r\n\r\n     Public Key\r\n        RSA encryption/decryption/generation.\r\n            There is no limit on the number of bits.\r\n        DSA encryption/decryption/generation.\r\n            There is no limit on the number of bits.\r\n        Diffie-Hellman key-exchange/key generation.\r\n            There is no limit on the number of bits.\r\n\r\n     X.509v3 certificates\r\n        X509 encoding/decoding into/from binary ASN1 and a PEM\r\n             based ASCII-binary encoding which supports encryption with a\r\n             private key.  Program to generate RSA and DSA certificate\r\n             requests and to generate RSA and DSA certificates.\r\n\r\n     Systems\r\n        The normal digital envelope routines and base64 encoding.  Higher\r\n        level access to ciphers and digests by name.  New ciphers can be\r\n        loaded at run time.  The BIO io system which is a simple non-blocking\r\n        IO abstraction.  Current methods supported are file descriptors,\r\n        sockets, socket accept, socket connect, memory buffer, buffering, SSL\r\n        client/server, file pointer, encryption, digest, non-blocking testing\r\n        and null.\r\n\r\n     Data structures\r\n        A dynamically growing hashing system\r\n        A simple stack.\r\n        A Configuration loader that uses a format similar to MS .ini files.\r\n\r\n openssl:\r\n     A command line tool that can be used for:\r\n        Creation of RSA, DH and DSA key parameters\r\n        Creation of X.509 certificates, CSRs and CRLs\r\n        Calculation of Message Digests\r\n        Encryption and Decryption with Ciphers\r\n        SSL/TLS Client and Server Tests\r\n        Handling of S/MIME signed or encrypted mail\r\n\r\n\r\n PATENTS\r\n -------\r\n\r\n Various companies hold various patents for various algorithms in various\r\n locations around the world. _YOU_ are responsible for ensuring that your use\r\n of any algorithms is legal by checking if there are any patents in your\r\n country.  The file contains some of the patents that we know about or are\r\n rumored to exist. This is not a definitive list.\r\n\r\n RSA Security holds software patents on the RC5 algorithm.  If you\r\n intend to use this cipher, you must contact RSA Security for\r\n licensing conditions. Their web page is http://www.rsasecurity.com/.\r\n\r\n RC4 is a trademark of RSA Security, so use of this label should perhaps\r\n only be used with RSA Security's permission.\r\n\r\n The IDEA algorithm is patented by Ascom in Austria, France, Germany, Italy,\r\n Japan, the Netherlands, Spain, Sweden, Switzerland, UK and the USA.  They\r\n should be contacted if that algorithm is to be used; their web page is\r\n http://www.ascom.ch/.\r\n\r\n NTT and Mitsubishi have patents and pending patents on the Camellia\r\n algorithm, but allow use at no charge without requiring an explicit\r\n licensing agreement: http://info.isl.ntt.co.jp/crypt/eng/info/chiteki.html\r\n\r\n INSTALLATION\r\n ------------\r\n\r\n To install this package under a Unix derivative, read the INSTALL file.  For\r\n a Win32 platform, read the INSTALL.W32 file.  For OpenVMS systems, read\r\n INSTALL.VMS.\r\n\r\n Read the documentation in the doc/ directory.  It is quite rough, but it\r\n lists the functions; you will probably have to look at the code to work out\r\n how to use them. Look at the example programs.\r\n\r\n PROBLEMS\r\n --------\r\n\r\n For some platforms, there are some known problems that may affect the user\r\n or application author.  We try to collect those in doc/PROBLEMS, with current\r\n thoughts on how they should be solved in a future of OpenSSL.\r\n\r\n SUPPORT\r\n -------\r\n\r\n See the OpenSSL website www.openssl.org for details of how to obtain\r\n commercial technical support.\r\n\r\n If you have any problems with OpenSSL then please take the following steps\r\n first:\r\n\r\n    - Download the current snapshot from ftp://ftp.openssl.org/snapshot/\r\n      to see if the problem has already been addressed\r\n    - Remove ASM versions of libraries\r\n    - Remove compiler optimisation flags\r\n\r\n If you wish to report a bug then please include the following information in\r\n any bug report:\r\n\r\n    - On Unix systems:\r\n        Self-test report generated by 'make report'\r\n    - On other systems:\r\n        OpenSSL version: output of 'openssl version -a'\r\n        OS Name, Version, Hardware platform\r\n        Compiler Details (name, version)\r\n    - Application Details (name, version)\r\n    - Problem Description (steps that will reproduce the problem, if known)\r\n    - Stack Traceback (if the application dumps core)\r\n\r\n Report the bug to the OpenSSL project via the Request Tracker\r\n (http://www.openssl.org/support/rt.html) by mail to:\r\n\r\n    openssl-bugs@openssl.org\r\n\r\n Note that the request tracker should NOT be used for general assistance\r\n or support queries. Just because something doesn't work the way you expect\r\n does not mean it is necessarily a bug in OpenSSL.\r\n\r\n Note that mail to openssl-bugs@openssl.org is recorded in the publicly\r\n readable request tracker database and is forwarded to a public\r\n mailing list. Confidential mail may be sent to openssl-security@openssl.org\r\n (PGP key available from the key servers).\r\n\r\n HOW TO CONTRIBUTE TO OpenSSL\r\n ----------------------------\r\n\r\n Development is coordinated on the openssl-dev mailing list (see\r\n http://www.openssl.org for information on subscribing). If you\r\n would like to submit a patch, send it to openssl-bugs@openssl.org with\r\n the string \"[PATCH]\" in the subject. Please be sure to include a\r\n textual explanation of what your patch does.\r\n\r\n If you are unsure as to whether a feature will be useful for the general\r\n OpenSSL community please discuss it on the openssl-dev mailing list first.\r\n Someone may be already working on the same thing or there may be a good\r\n reason as to why that feature isn't implemented.\r\n\r\n Patches should be as up to date as possible, preferably relative to the\r\n current Git or the last snapshot. They should follow the coding style of\r\n OpenSSL and compile without warnings. Some of the core team developer targets\r\n can be used for testing purposes, (debug-steve64, debug-geoff etc). OpenSSL\r\n compiles on many varied platforms: try to ensure you only use portable\r\n features.\r\n\r\n Note: For legal reasons, contributions from the US can be accepted only\r\n if a TSU notification and a copy of the patch are sent to crypt@bis.doc.gov\r\n (formerly BXA) with a copy to the ENC Encryption Request Coordinator;\r\n please take some time to look at\r\n    http://www.bis.doc.gov/Encryption/PubAvailEncSourceCodeNofify.html [sic]\r\n and\r\n    http://w3.access.gpo.gov/bis/ear/pdf/740.pdf (EAR Section 740.13(e))\r\n for the details. If \"your encryption source code is too large to serve as\r\n an email attachment\", they are glad to receive it by fax instead; hope you\r\n have a cheap long-distance plan.\r\n\r\n Our preferred format for changes is \"diff -u\" output. You might\r\n generate it like this:\r\n\r\n # cd openssl-work\r\n # [your changes]\r\n # ./Configure dist; make clean\r\n # cd ..\r\n # diff -ur openssl-orig openssl-work > mydiffs.patch\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}